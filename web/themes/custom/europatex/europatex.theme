<?php

use Drupal\Component\Utility\Html;

/**
 * Implements hook_theme_suggestions_page_alter().
 */
function europatex_theme_suggestions_page_alter(array &$suggestions, array $variables) {
  if ($node = \Drupal::routeMatch()->getParameter('node')) {
    $suggestions[] = 'page__' . $node->bundle();
  }
}

/**
 * Implements hook_preprocess_HOOK() for menu.html.twig.
 */
function europatex_preprocess_menu(&$variables) {
  $variables['attributes']['class'][] = 'menu';
  $variables['attributes']['class'][] = 'clearfix';
}

/**
 * Implements hook_page_attachements_alter().
 */
function europatex_page_attachments_alter(array &$page) {
  $on_local = getenv('DOCKER');
  if (in_array('europatex/global_css', $page['#attached']['library']) && $on_local) {
    $index = array_search('europatex/global_css', $page['#attached']['library']);
    $page['#attached']['library'][$index] = 'europatex/global_css_dev';
  }
}

/**
 * Implements hook_preprocess_HOOK() for block.html.twig.
 */
function europatex_preprocess_block(&$variables) {
  $variables['attributes']['class'][] = 'block';

  // Add classes to blocks.
  if (!empty($variables['attributes']['id'])) {
    $variables['attributes']['class'][] = preg_replace('/^block-/', '', $variables['attributes']['id']);
  }
}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function europatex_preprocess_node(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];

  switch ($view_mode) {
    case 'full':
      // Option to hide page title field.
      $hide_page_title = $node->hasField('field_hide_page_title') &&
      $node->field_hide_page_title->value === '1';

      if ($hide_page_title) {
        $variables['attributes']['class'][] = 'hide-title';
      }
      break;
  }
}

/**
 * Implements template_preprocess_region().
 */
function europatex_preprocess_region(&$variables) {
  if (isset($variables['region']) && $variables['region'] == 'header_bottom') {
    $variables['attributes']['id'][] = 'mobile-menu';
  }
}

/**
 * Implements hook_preprocess_paragraph().
 */
function europatex_preprocess_paragraph(&$variables) {
  $paragraph = $variables['paragraph'];

  switch ($paragraph->bundle()) {
    case 'layout_section':
      if ($paragraph->field_full_width->value === '1') {
        $variables['attributes']['class'][] = 'full-width';
      }
      if ($paragraph->field_narrow_width->value === '1') {
        $variables['attributes']['class'][] = 'narrow-width';
      }
      if ($paragraph->field_overlap_next_section->value === '1') {
        $variables['attributes']['class'][] = 'overlap';
      }
      if ($paragraph->field_add_background_texture->value === '1') {
        $variables['attributes']['class'][] = 'bgrd-texture';
      }
      if ($paragraph->field_add_bottom_border->value === '1') {
        $variables['attributes']['class'][] = 'has-border';
      }
      if (!empty($paragraph->field_remove_space->value)) {
        $variables['attributes']['class'][] = 'remove-space--' . $paragraph->field_remove_space->value;
      }
      break;
  }
}

/**
 * Implements hook_preprocess_views_view().
 */
function europatex_preprocess_views_view(&$variables) {
  $view = $variables['view'];
  if (strpos($view->storage->get('tag'), 'commerce_cart_form') !== FALSE) {
    $variables['#attached']['library'][] = 'europatex/commerce.cart';
  }

  if ($view->current_display == 'share_embed_preview') {
    $variables['#attached']['library'][] = 'europatex/commerce.share';
  }
}

/**
 * Implements hook_preprocess_commerce_product().
 */
function europatex_preprocess_commerce_product(array &$variables) {
  // For some reason, Commerce product titles are already marked as printed
  // before they even get rendered, on full page displays.
  $variables['product']['title']['#printed'] = FALSE;
  // Add basic css classes
  $variables['attributes']['class'][] = 'product';
  $variables['attributes']['class'][] = 'product-type--' . $variables['product_entity']->bundle();
  $variables['attributes']['class'][] = 'display--' . $variables['elements']['#view_mode'];
}

/**
 * Implements hook_preprocess_field().
 */
function europatex_preprocess_field(&$variables) {
  $element = $variables['element'];
  $view_mode = $variables['element']['#view_mode'];

  switch ($element['#field_name']) {

    case 'field_cta_link':
      $variables['items'][0]['content']['#options']['attributes']['class'][] = 'button--primary';
      break;
  }
}

/**
 * Implements hook_js_settings_alter().
 */
function europatex_js_settings_alter(array &$settings, \Drupal\Core\Asset\AttachedAssetsInterface $assets) {
  if (isset($settings['slick'])) {
    $settings['slick']['autoplay'] = 1;
  }
}
